# 构建阶段
FROM rust:1.81.0 as builder


# 创建新的 sources.list 文件使用阿里云镜像
RUN echo "deb http://mirrors.aliyun.com/debian/ bullseye main non-free contrib" > /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian-security bullseye-security main" >> /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib" >> /etc/apt/sources.list

WORKDIR /usr/src/app
COPY . .
ENV SQLX_OFFLINE true
# 安装依赖并构建应用
RUN apt-get update && apt-get install -y --no-install-recommends libssl-dev pkg-config
RUN cargo build --release

# 运行阶段
FROM debian:bookworm-slim

# 创建新的 sources.list 文件使用阿里云镜像
RUN echo "deb http://mirrors.aliyun.com/debian/ bullseye main non-free contrib" > /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian-security bullseye-security main" >> /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib" >> /etc/apt/sources.list

# 安装运行时依赖
RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates libssl3 \
    && rm -rf /var/lib/apt/lists/*

# 创建非 root 用户
RUN useradd -m myuser

# 从构建阶段复制二进制文件
COPY --from=builder /usr/src/app/target/release/zero2prod zero2prod

# 设置工作目录
WORKDIR /app

# 切换到非 root 用户
USER myuser

# 设置环境变量
ENV APP_ENVIRONMENT production
COPY configuration configuration
# 暴露应用端口（如果需要的话）
EXPOSE 8080

# 运行应用
ENTRYPOINT ["./zero2prod"]