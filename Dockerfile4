FROM lukemathwalker/cargo-chef:latest-rust-1.81.0 as chef
WORKDIR /app
RUN apt update && apt install lld clang -y

FROM chef as planner
COPY . .
# Compute a lock-like file for our project
RUN cargo chef prepare  --recipe-path recipe.json

FROM chef as builder

# 创建 .cargo 目录
RUN mkdir -p /usr/local/cargo

# 创建 config.toml 文件并写入镜像源配置
RUN echo '[source.crates-io]' > /usr/local/cargo/config.toml \
    && echo 'registry = "https://github.com/rust-lang/crates.io-index"' >> /usr/local/cargo/config.toml \
    && echo 'replace-with = "ustc"' >> /usr/local/cargo/config.toml \
    && echo '[source.ustc]' >> /usr/local/cargo/config.toml \
    && echo 'registry = "git://mirrors.ustc.edu.cn/crates.io-index"' >> /usr/local/cargo/config.toml

# 设置环境变量，指定 Cargo 配置文件的位置
ENV CARGO_HOME=/usr/local/cargo

COPY --from=planner /app/recipe.json recipe.json
# Build our project dependencies, not our application!
RUN cargo chef cook --release --recipe-path recipe.json
COPY . .
ENV SQLX_OFFLINE true
# Build our project
RUN cargo build --release --bin zero2prod

FROM debian:bookworm-slim AS runtime
WORKDIR /app
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends openssl ca-certificates \
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
COPY --from=builder /app/target/release/zero2prod zero2prod
ENV APP_ENVIRONMENT production
# 修改 ENTRYPOINT 来将日志输出到文件
ENTRYPOINT ["sh", "-c", "./zero2prod > /var/log/zero2prod/app.log 2>&1"]
